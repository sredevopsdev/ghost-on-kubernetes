apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ghost-on-kubernetes.fullname" . }}-ghost
  labels:
  {{- include "ghost-on-kubernetes.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ghostOnKubernetes.replicas }}
  selector:
    matchLabels:
      app: {{ include "ghost-on-kubernetes.fullname" . }}-ghost
  serviceName: {{ include "ghost-on-kubernetes.fullname" . | trunc 8 | trimSuffix "-" }}-svc
  template:
    metadata:
      labels:
        app: {{ include "ghost-on-kubernetes.fullname" . }}-ghost
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: {{ quote .Values.ghostOnKubernetes.ghostOnKubernetes.env.nodeEnv }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.ghostOnKubernetes.ghostOnKubernetes.image.repository }}:{{ .Values.ghostOnKubernetes.ghostOnKubernetes.image.tag }} 
        name: {{ include "ghost-on-kubernetes.fullname" . }}-ghost
        ports: 
        - containerPort: {{ .Values.ghostConfigProd.port }}
          name: http
          protocol: TCP


        resources: {}
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: ghost-on-kubernetes-volume
        - mountPath: /var/lib/ghost/config.production.json
          name: ghost-config-prod
          readOnly: true
          subPath: config.production.json
      terminationGracePeriodSeconds: 30
      volumes:
      - name: ghost-config-prod
        secret:
          secretName: {{ include "ghost-on-kubernetes.fullname" . }}-ghost-config-prod
  volumeClaimTemplates:
  - metadata:
      name: ghost-on-kubernetes-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.volumeClaimTemplates.ghost.storage }}
      storageClassName: {{ .Values.volumeClaimTemplates.ghost.storageClassName }}
      volumeMode: Filesystem
